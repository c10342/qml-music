import QtQuick 2.15
import QtQuick.Controls

Item {
    Item{
        anchors.fill: parent
        anchors.margins: 20
        Text {
            id:titleLabel
            anchors.left: parent.left
            text: '设置'
            color: 'white'
            font.pixelSize: 24
            font.bold: true
        }
        
        Flow{
            id:tabWrapper
            property int selectedIndex: 0
            anchors.top: titleLabel.bottom
            anchors.left: parent.left
            anchors.right: parent.right
            anchors.topMargin: 4
            spacing: 10
            Repeater{
                model: ['账号','常规','系统','播放','消息与隐私','快捷键']
                Item{
                    height: textLabel.implicitHeight+6
                    width:textLabel.implicitWidth
                    Label{
                        id:textLabel
                        text:modelData
                        font.pixelSize: 14
                        font.bold: true
                        color: '#fff'
                        MouseArea{
                            anchors.fill: parent
                            hoverEnabled: true
                            onEntered: {
                                cursorShape = Qt.PointingHandCursor
                                if(tabWrapper.selectedIndex!==index){
                                    textLabel.color='#b9b9ba'
                                }
                            }
                            onExited: {
                                cursorShape = Qt.ArrowCursor
                                if(tabWrapper.selectedIndex!==index){
                                    textLabel.color='white'
                                }
                            }
                            onClicked: {
                                tabWrapper.selectedIndex = index
                                textLabel.color='#fff'
                            }
                        }
                    }
                    Rectangle{
                        visible:  tabWrapper.selectedIndex === index
                        anchors.left: textLabel.left
                        anchors.right: textLabel.right
                        anchors.top: textLabel.bottom
                        anchors.leftMargin: textLabel.implicitWidth/textLabel.font.pixelSize*2
                        anchors.rightMargin: textLabel.implicitWidth/textLabel.font.pixelSize*2
                        height: 3
                        color: '#eb4d44'
                    }
                }
            }
        }
        
        Column{
            anchors.left: parent.left
            anchors.right: parent.right
            anchors.top: tabWrapper.bottom
            
            Rectangle{
                anchors.left: parent.left
                anchors.right: parent.right
                Label{
                    id:label1
                    text: '常规'
                    font.pixelSize: 20
                    font.bold: true
                    anchors.left: parent.left
                    color: '#fff'
                    width: 100
                }
                Column{
                    // anchors.verticalCenter: label1.verticalCenter
                    anchors.left: label1.right
                    anchors.top: label1.top
                    spacing: 10
                    Label{
                        font.pixelSize: 18
                        color: '#e8e8e8'
                        // 显示富文本
                        textFormat: Text.RichText
                        text: '<span style="color:white" >字体选择</span>'
                    }
                    
                    ComboBox {
                        anchors.left: label1.right
                        width: 150
                        height: 30
                        background: Rectangle{
                            anchors.fill: parent
                            radius: parent/2
                            border.width: 1
                            border.color: '#28282e'
                            color: '#1a1a20'
                        }
                        model: ["选项1", "选项2", "选项3"]
                        onCurrentIndexChanged: {
                            console.log("当前选择:", currentIndex, model[currentIndex])
                        }
                    }
                }
            }
        }
        
    }
}
